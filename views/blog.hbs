<style>
    table.sudoku_grid {
        width: 100%;
        margin-bottom: 1em;
    }

    table.sudoku_grid tr,
    table.sudoku_grid td {
        border: 1px solid #000;
        text-align: center;
        font-size: 18pt;
        font-weight: bold;
    }

    @media only screen and (max-width: 600px) {

        table#sudoku_grid tr,
        table#sudoku_grid td {
            font-size: 12pt;
        }
    }

    table.sudoku_grid td {
        width: 11.1%;
        padding-top: 2.5%;
        padding-bottom: 2.5%;
        vertical-align: middle;
    }

    .selected {
        background-color: #6FFFE9;
    }

    .wrong {
        background-color: red;
    }

    .given {
        background-color: lightgray;
    }

</style>


<main class="container">
  <h1 style="color: #6FFFE9">Post a question!</h1>
  <div class="mb-3">
    <label for="title" class="form-label" style="color: #6FFFE9">Title</label>
    <input type="email" class="form-control" id="title" placeholder="Descritption...">
  </div>
  <div class="mb-3">
    <label for="body" class="form-label" style="color: #6FFFE9">Body</label>
    <textarea class="form-control" id="body" rows="3" placeholder="Additional Details..."></textarea>
  </div>

  <button class="btn btn-primary" id="submit" type="submit">Submit</button>
  <br><br />

  <ul id="posts" class="list-group"></ul>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

  <script>
    function createPost() {
      let newPost = {
        title: document.getElementById('title').value,
        body: document.getElementById('body').value
      }
      axios.post('/api/posts', newPost, {
        headers: {
          'Authorization': `Bearer ${localStorage.getItem('token')}`
        }
      })
        .then(res => {
          console.log(res)
        })
    }


    function createSudokuBoard(puzzle) {
      console.log(puzzle)
      let sudoku_grid = document.createElement('table');
      sudoku_grid.className = "sudoku_grid"

        for (let y = 0; y < 9; y++) {
            let row = document.createElement('tr');

            if (y == 2 || y == 5) {
                row.style.borderBottom = "3px solid #000";
            }

            for (let x = 0; x < 9; x++) {
                let column = document.createElement('td');
                let index = x + (y * 9);
                column.id = index;
                column.className = "cell"
                if (puzzle[index] < 255) {
                    column.innerHTML = puzzle[index];
                }

                if (x == 2 || x == 5) {
                    column.style.borderRight = "3px solid #000";
                }
                row.append(column);
            }
            sudoku_grid.append(row);
        }

      return sudoku_grid
    }

    document.getElementById("submit").addEventListener('click', event => {
      event.preventDefault()
      createPost()
    })

    document.addEventListener('click', event => {
      if (event.target.className.split(" ").includes("submitComment")) {
        event.preventDefault()
        let postId = event.target.dataset.postid
        let commentBody = document.getElementById(`comment-${postId}`).value
        let newComment = {
          body: commentBody,
          pid: postId
        }
        axios.post('/api/comments', newComment, {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('token')}`
          }
        }).then(res => {
          location = "/blog"
        })
      }
    })

    axios.get('/api/posts', {
      headers: {
        'Authorization': `Bearer ${localStorage.getItem('token')}`
      }
    })
      .then(res => {

        console.log(res.data)
        let posts = res.data
        posts.forEach(posts => {
          let postElem = document.createElement('li')
          postElem.className = "list-group-item"

          let commentElem = document.createElement('ul')
          commentElem.className = "list-group";

          posts.comments.forEach(async comments => {
            comments.user = await axios.get(`/api/users/${comments.uid}`, {
                    headers: {
                      'Authorization': `Bearer ${localStorage.getItem('token')}`
                    }
                })
            let commentDiv = document.createElement('li')
            commentDiv.className = "list-group-item"
            commentDiv.style.backgroundColor = "#EEE"
            commentDiv.innerHTML = `<p> ${comments.body} </p><sub>Posted by ${comments.user.data.username}</sub>`
            commentElem.append(commentDiv)
          })

        let cardDiv = document.createElement("div")
        cardDiv.className = "card mb-3"

        let cardHeader = document.createElement("div")
        cardHeader.className = "card-header"
        cardHeader.innerHTML = `
              <h3>${posts.title}</h3>
              <sub>Posted  by <i>${posts.User.username}</i></sub>`
        
        cardDiv.append(cardHeader);

        let cardBody = document.createElement("div")
        cardBody.className = "card-body";
        cardBody.innerHTML = `<p>${posts.body}</p><br />`

        let puzzleTable = createSudokuBoard(posts.data.data);
        cardBody.append(puzzleTable)


        cardBody.append(commentElem);
        let newCommentForm = document.createElement("div");
        newCommentForm.innerHTML = `
          <hr>
          <label for="comment" class="form-label">Add a Comment</label>
          <textarea class="form-control" id="comment-${posts.id}" rows="3" placeholder="Additional Details..."></textarea>
          <button class="btn btn-primary submitComment" data-postid="${posts.id}" type="submit">Submit</button>
        `
        cardBody.append(newCommentForm)
        cardDiv.append(cardBody);
        
         
          document.getElementById('posts').prepend(cardDiv)
        })

      })



  </script>

</main>